name: Create release

on:
  push:
    tags:
      - 'v*'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  APPLICATION_NAME: group-by.web.app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js version
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'

    - name: npm install
      run: npm install

    - name: npm build
      run: npm run build --if-present
    - name: Pack
      run: tar czvf "${{ env.APPLICATION_NAME }}.tar.gz" dist/${{ env.APPLICATION_NAME }}
    - name: Clean build dir
      run: rm -r dist/${{ env.APPLICATION_NAME }}
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APPLICATION_NAME }}
        path: ${{ env.APPLICATION_NAME }}.tar.gz
      
  build-release:
    name: Build release docker image
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release-project:
    name: Create release
    runs-on: ubuntu-latest
    needs: build-release
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Genereate changelog
        id: changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: CHANGELOG.md
      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: Changelog
          path: CHANGELOG.md
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            ${{ env.APPLICATION_NAME }}.tar.gz
            CHANGELOG.md